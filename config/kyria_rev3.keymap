#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <zmk-helpers/key-labels/kyria.h> 

#ifndef KEYMAP_DRAWER
#include "includes/keys_sv.h"
#endif

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5
#define EXTRAS LF1 LF0 RF0 RF1
#define THUMBS LH4 LH3 LH2 LH1 LH0 RH0 RH1 RH2 RH3 RH4

#define HM_TAPPING_TERM 200      // for non homerow tap
#define HM_TAPPING_TERM_FAST 120 // double tap for key repeating
#define HM_PRIOR_IDLE 200        // 150 is about 80 wpm

#define SMART_SYM(layer) &sym_smart layer layer

/* layers */
#define QWE  0
#define QWEH 1 // Homerow Qwerty
#define COL  2
#define COLH 3 // Homerow Colemak
#define SYM  4
#define NAV  5
#define FUNC 6
#define ADJ  7
#define TRI  8

#define XXX &none
#define ___ &trans

/ {
    behaviors {
        mt: mod_tap {
          compatible = "zmk,behavior-hold-tap";
          flavor = "hold-preferred";
          tapping-term-ms = <HM_TAPPING_TERM>;
          #binding-cells = <2>;
          bindings = <&kp>, <&kp>;
          display-name = "Mod-Tap";
        };

         // Single tap: toggle | hold: momentary SYM layer
        sym_smart: sym_smart {
          compatible = "zmk,behavior-hold-tap";
          flavor = "balanced";
          #binding-cells = <2>;
          tapping-term-ms = <HM_TAPPING_TERM>;
          quick-tap-ms = <HM_TAPPING_TERM_FAST>;
          bindings = <&mo>, <&tog>;
        };

        hml: hml_tap {
          display-name = "Homerow Left";
          compatible = "zmk,behavior-hold-tap";
          flavor = "balanced";
          #binding-cells = <2>;
          require-prior-idle-ms = <HM_PRIOR_IDLE>;
          tapping-term-ms = <280>;
          quick-tap-ms = <HM_TAPPING_TERM_FAST>;
          bindings = <&kp>, <&kp>;
          hold-trigger-key-positions = <KEYS_R THUMBS>;
          hold-trigger-on-release;
        };

        hmr: hmr_tap {
          display-name = "Homerow Right";
          compatible = "zmk,behavior-hold-tap";
          #binding-cells = <2>;
          flavor = "balanced";
          require-prior-idle-ms = <HM_PRIOR_IDLE>;
          tapping-term-ms = <280>;
          quick-tap-ms = <HM_TAPPING_TERM_FAST>;
          bindings = <&kp>, <&kp>;
          hold-trigger-key-positions = <KEYS_L THUMBS>;
          hold-trigger-on-release;
        };

        bspc_del: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DELETE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <NAV SYM>;
            then-layer = <TRI>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_nav {
            bindings = <&mo FUNC>;
            key-positions = <LH0 LM4>;
            layers = <QWE QWEH COL COLH>;
            timeout-ms = <100>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;
            slow-release;
        };

        combo_sym {
            bindings = <&mo SYM>;
            key-positions = <LH0 LM1>;
            layers = <QWE QWEH COL COLH>;
            timeout-ms = <100>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;
            slow-release;
        };
    };

    macros {
        mac0: anddo_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp SPACE &kp SV_AMPS &kp SV_AMPS &kp SPACE>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty_layer {
            display-name = "Qwerty";
            bindings = <
&mt GRAVE ESC  &kp Q  &kp W  &kp E  &kp R   &kp T                                                                                    &kp Y     &kp U     &kp I     &kp O     &kp P        &kp BSPC
&mt LSHIFT TAB &kp A  &kp S  &kp D  &kp F   &kp G                                           /**/                                     &kp H     &kp J     &kp K     &kp L     &kp SV_SEMI  &mt RSHIFT SV_DQT
&kp LCTRL      &kp Z  &kp X  &kp C  &kp V   &kp B    &mt SV_LBKT SV_LBRC &caps_word         /**/  &mo FUNC       &mt SV_RBKT SV_RBRC &kp N     &kp M     &kp COMMA &kp DOT   &kp FSLH     &kp RCTRL
                                   &mo ADJ &kp LGUI &mt LALT ENTER      &kp SPACE &mo NAV  /**/  SMART_SYM(SYM) &kp SPACE           &bspc_del &kp RALT &kp RGUI
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        qwerty_homerow {
            display-name = "Q-ModKeys";
            bindings = <
&trans  &trans      &trans      &trans       &trans        &trans                                        &trans  &trans        &trans       &trans      &trans            &trans
&trans  &hml LGUI A &hml LALT S &hml LCTRL D &hml LSHIFT F &trans                  /**/                  &trans  &hmr RSHIFT J &hmr LCTRL K &hmr LALT L &hmr LGUI SV_SEMI &trans
&trans  &trans      &trans      &trans       &trans        &trans  &trans  &trans  /**/  &trans  &trans  &trans  &trans        &trans       &trans      &trans            &trans
                                &trans       &trans        &trans  &trans  &trans  /**/  &trans  &trans  &trans  &trans        &trans
            >;
        };

        colemak_layer {
            display-name = "Colemak";
            bindings = <
&mt GRAVE ESC  &kp Q  &kp W  &kp F  &kp P   &kp B                                                                                    &kp J     &kp L     &kp U     &kp Y   &kp SV_SEMI &kp BSPC
&mt LSHIFT TAB &kp A  &kp R  &kp S  &kp T   &kp G                                           /**/                                     &kp M     &kp N     &kp E     &kp I   &kp O       &mt RSHIFT SV_DQT
&kp LCTRL      &kp Z  &kp X  &kp C  &kp D   &kp V    &mt SV_LBKT SV_LBRC &caps_word         /**/  &mo FUNC       &mt SV_RBKT SV_RBRC &kp K     &kp H     &kp COMMA &kp DOT &kp FSLH    &kp RCTRL
                                   &mo ADJ &kp LGUI &mt LALT ENTER      &kp SPACE &mo NAV  /**/  SMART_SYM(SYM) &kp SPACE           &bspc_del &kp RALT &kp RGUI
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        colemak_homerow {
            display-name = "C-ModKeys";
            bindings = <
&trans  &trans       &trans       &trans        &trans         &trans                                        &trans  &trans         &trans        &trans       &trans             &trans
&trans  &hml LGUI A  &hml LALT S  &hml LCTRL D  &hml LSHIFT F  &trans                  /**/                  &trans  &hmr RSHIFT J  &hmr LCTRL K  &hmr LALT L  &hmr LGUI SV_SEMI  &trans
&trans  &trans       &trans       &trans        &trans         &trans  &trans  &trans  /**/  &trans  &trans  &trans  &trans         &trans        &trans       &trans             &trans
                                  &trans        &trans         &trans  &trans  &trans  /**/  &trans  &trans  &trans  &trans         &trans
            >;
        };

        symbol_layer {
            display-name = "Symbol Layer";
            bindings = <
&trans  &kp  SV_EXCL &kp  SV_AT    &kp  HASH     &mt SV_EURO SV_DLLR  &kp SV_PRCNT                                                  &kp SV_AMPS  &mt  SV_BSLH SV_FSLH  &kp  SV_LPAR  &kp SV_RPAR  &kp  SV_STAR  &trans
&trans  &hml LGUI N1 &hml LALT N2  &hml LCTRL N3 &hml LSHIFT N4       &kp N5                              /**/                      &kp N6       &hmr RSHIFT N7        &hmr LCTRL N8 &hmr LALT N9 &hmr LGUI N0  &trans
&trans  &kp  SV_PIPE &kp  SV_DQT   &kp  SV_PLUS  &kp SV_MINUS         &kp SV_LBKT   &kp SV_RBKT   &trans  /**/  &trans  &kp SV_LBRC &kp SV_RBRC  &kp  SV_UNDER         &kp  SV_COMMA &kp SV_DOT   &kp  SV_CARET &trans
                                   &trans        &trans               &trans        &trans        &trans  /**/  &trans  &trans      &trans       &trans                &trans
            >;
        };

        navigation_layer {
            display-name = "Navigation Layer";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                          &kp HOME  &kp PG_DN  &kp PG_UP  &kp END   &kp DEL   &trans  
&trans  &trans  &trans  &trans  &trans  &trans                    /**/                  &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT &kp INS   &trans 
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp SLCK  /**/  &trans  &trans  &trans    &trans     &trans     &trans    &kp PSCRN &trans 
                        &trans  &trans  &trans  &trans  &trans    /**/  &trans  &trans  &trans    &trans     &trans
            >;
            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        function_layer {
            display-name = "Function Layer";
            bindings = <
&kp SV_UMLAUT &trans  &kp F1  &kp F2   &kp F3   &kp F4                                         &mkp MB3        &msc SCRL_DOWN  &msc SCRL_UP  &mkp MB4         &kp SV_LBRC   &kp SV_RBRC
&trans        &trans  &kp F5  &kp F6   &kp F7   &kp F8                   /**/                  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &kp SV_LT     &kp SV_GT
&trans        &trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans  &trans  /**/  &trans  &trans  &trans          &mkp MB1        &mkp MB2      &trans           &kp SV_GRAVE  &kp SV_ACUTE
                              &trans   &trans   &kp LALT &trans  &trans  /**/  &trans  &trans  &trans          &trans          &trans
            >;
        };

        adjust_layer {
            display-name = "Adjustment Layer";
            bindings = <
&bt BT_PRV  &bt BT_NXT      &trans         &trans  &trans  &to QWE                                                  &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_CLR  &bt BT_CLR_ALL  &bt BT_DISC 0  &trans  &trans  &to QWEH                          /**/                   &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans          &trans         &trans  &trans  &to COL   &trans  &studio_unlock  /**/   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                           &trans  &trans  &to COLH  &trans  &trans          /**/   &trans  &trans  &trans  &trans  &trans
            >;
        };

        tri_layer {
            display-name = "Tri Layer";
            bindings = <
&trans  &trans         &trans          &trans  &trans  &trans                                        &mac0   &trans  &trans  &kp SV_O_UMLAUT  &trans  &trans
&trans  &kp SV_A_RING  &kp SV_A_UMLAUT &trans  &trans  &trans                  /**/                  &trans  &trans  &trans  &trans           &trans  &trans
&trans  &trans         &trans          &trans  &trans  &trans  &trans  &trans  /**/  &trans  &trans  &trans  &trans  &trans  &trans           &trans  &trans
                       &trans          &trans  &trans  &trans  &trans  &trans  /**/  &trans  &trans  &trans  &trans
            >;
        };
/*
        empty_layer {
            display-name = "Empty Layer";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
*/
    };
};
